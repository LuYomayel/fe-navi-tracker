
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.10.1
 * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
 */
Prisma.prismaVersion = {
  client: "6.10.1",
  engine: "9b628578b3b7cae625e8c927178f15a170e74a9c"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ActivityScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  time: 'time',
  days: 'days',
  color: 'color',
  category: 'category',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DailyCompletionScalarFieldEnum = {
  id: 'id',
  activityId: 'activityId',
  date: 'date',
  completed: 'completed',
  notes: 'notes',
  createdAt: 'createdAt'
};

exports.Prisma.DailyNoteScalarFieldEnum = {
  id: 'id',
  date: 'date',
  content: 'content',
  mood: 'mood',
  predefinedComments: 'predefinedComments',
  customComment: 'customComment',
  aiAnalysis: 'aiAnalysis',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserPreferencesScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  darkMode: 'darkMode',
  weekStartsOnMonday: 'weekStartsOnMonday',
  notifications: 'notifications',
  language: 'language',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WeeklyStreakScalarFieldEnum = {
  id: 'id',
  activityId: 'activityId',
  weekStart: 'weekStart',
  streak: 'streak',
  completed: 'completed',
  total: 'total',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.NutritionAnalysisScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  date: 'date',
  mealType: 'mealType',
  foods: 'foods',
  totalCalories: 'totalCalories',
  macronutrients: 'macronutrients',
  imageUrl: 'imageUrl',
  aiConfidence: 'aiConfidence',
  userAdjustments: 'userAdjustments',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BodyAnalysisScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  bodyType: 'bodyType',
  measurements: 'measurements',
  bodyComposition: 'bodyComposition',
  recommendations: 'recommendations',
  imageUrl: 'imageUrl',
  aiConfidence: 'aiConfidence',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AISuggestionScalarFieldEnum = {
  id: 'id',
  type: 'type',
  title: 'title',
  description: 'description',
  priority: 'priority',
  basedOn: 'basedOn',
  actions: 'actions',
  dismissedAt: 'dismissedAt',
  createdAt: 'createdAt'
};

exports.Prisma.ChatMessageScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  role: 'role',
  content: 'content',
  timestamp: 'timestamp'
};

exports.Prisma.CommentAnalysisScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  date: 'date',
  selectedComments: 'selectedComments',
  customComment: 'customComment',
  detectedPatterns: 'detectedPatterns',
  suggestions: 'suggestions',
  moodTrend: 'moodTrend',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.ActivityOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  time: 'time',
  color: 'color',
  category: 'category'
};

exports.Prisma.DailyCompletionOrderByRelevanceFieldEnum = {
  id: 'id',
  activityId: 'activityId',
  date: 'date',
  notes: 'notes'
};

exports.Prisma.DailyNoteOrderByRelevanceFieldEnum = {
  id: 'id',
  date: 'date',
  content: 'content',
  customComment: 'customComment'
};

exports.Prisma.UserPreferencesOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  language: 'language'
};

exports.Prisma.WeeklyStreakOrderByRelevanceFieldEnum = {
  id: 'id',
  activityId: 'activityId',
  weekStart: 'weekStart'
};

exports.Prisma.NutritionAnalysisOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  date: 'date',
  mealType: 'mealType',
  imageUrl: 'imageUrl'
};

exports.Prisma.BodyAnalysisOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  bodyType: 'bodyType',
  imageUrl: 'imageUrl'
};

exports.Prisma.AISuggestionOrderByRelevanceFieldEnum = {
  id: 'id',
  type: 'type',
  title: 'title',
  description: 'description',
  priority: 'priority'
};

exports.Prisma.ChatMessageOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  role: 'role',
  content: 'content'
};

exports.Prisma.CommentAnalysisOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  date: 'date',
  customComment: 'customComment'
};


exports.Prisma.ModelName = {
  Activity: 'Activity',
  DailyCompletion: 'DailyCompletion',
  DailyNote: 'DailyNote',
  UserPreferences: 'UserPreferences',
  WeeklyStreak: 'WeeklyStreak',
  NutritionAnalysis: 'NutritionAnalysis',
  BodyAnalysis: 'BodyAnalysis',
  AISuggestion: 'AISuggestion',
  ChatMessage: 'ChatMessage',
  CommentAnalysis: 'CommentAnalysis'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
