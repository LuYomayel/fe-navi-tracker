name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e

            echo "🚀 Starting deployment..."

            # Navegar al directorio del proyecto
            cd ${{ secrets.PROJECT_PATH }}

            # Verificar que estamos en el directorio correcto
            if [ ! -f "package.json" ]; then
              echo "❌ Error: package.json not found in $(pwd)"
              exit 1
            fi

            echo "📁 Current directory: $(pwd)"

            # Git pull con retry
            echo "📥 Pulling latest changes..."
            for i in {1..3}; do
              if git pull origin main; then
                break
              else
                echo "⚠️ Git pull failed, attempt $i/3"
                if [ $i -eq 3 ]; then
                  echo "❌ Git pull failed after 3 attempts"
                  exit 1
                fi
                sleep 5
              fi
            done

            # Instalar dependencias con optimizaciones
            echo "📦 Installing dependencies..."
            npm install --legacy-peer-deps

            # Build con configuración optimizada
            echo "🔨 Building application..."
            export NODE_OPTIONS="--max-old-space-size=2048"
            export NODE_ENV="production"

            # Usar build rápido que ignora type checking
            npm run build && npm run postbuild

            echo "✅ Build completed successfully"

            # Restart PM2
            echo "🔄 Restarting PM2..."
            pm2 reload ecosystem.config.js --only navi-tracker-frontend || pm2 start ecosystem.config.js

            # Restart Apache2
            echo "🔄 Restarting Apache2..."
            sudo systemctl restart apache2

            # Verificar que los servicios están corriendo
            echo "🔍 Verifying services..."

            # Verificar PM2
            if pm2 info navi-tracker-frontend | grep -q "status.*online"; then
              echo "✅ PM2 service is running"
            else
              # Alternativa segura si el formato es inesperado
              if pm2 status navi-tracker-frontend | grep -q "online"; then
                echo "✅ PM2 service is running (checked with pm2 status)"
              else
                echo "❌ PM2 service failed to start"
                pm2 logs navi-tracker-frontend --lines 10
                exit 1
              fi
            fi

            # Verificar Apache2
            if systemctl is-active --quiet apache2; then
              echo "✅ Apache2 is running"
            else
              echo "❌ Apache2 failed to start"
              sudo systemctl status apache2
              exit 1
            fi

            # Health check
            echo "🏥 Performing health check..."
            sleep 10

            if curl -f -s http://localhost:3150 > /dev/null; then
              echo "✅ Health check passed - Application is responding"
            else
              echo "⚠️ Health check failed - Application might be starting up"
              echo "📊 PM2 status:"
              pm2 list
              echo "📋 Recent logs:"
              pm2 logs navi-tracker-frontend --lines 5
            fi

            echo "🎉 Deployment completed successfully!"
            echo "📊 Final status:"
            pm2 list
            echo "💾 Disk usage:"
            df -h | head -2
